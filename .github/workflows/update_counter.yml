# .github/workflows/update_counter.yml

name: Update Visit Counter (Hits.sh)

on:
  push:
    branches:
      - main # OU o nome da sua branch principal (master/main)
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Fetch and Update Counter (Hits.sh)
        id: count_fetch
        run: |
          # A CHAVE DEVE SER SÓ O DOMÍNIO + CAMINHO (ex: nataliaberbetviana.github.io)
          DOMAIN_KEY="nataliaberbetviana.github.io" 
          
          # URL DE HIT: Essa URL registra o hit e retorna o JSON com o valor.
          HIT_URL="http://hits.sh/${DOMAIN_KEY}.json" # Usando HTTP para evitar bloqueios, como na tentativa anterior
          
          echo "Fazendo HIT na API (hits.sh): $HIT_URL"
          
          # Faz o HIT e salva a resposta JSON
          RESPONSE=$(curl -s $HIT_URL)
          
          echo "Resposta da API: $RESPONSE"

          # Tenta extrair o valor do JSON. O hits.sh retorna no campo 'value'.
          COUNT=$(echo $RESPONSE | python3 -c "import sys, json; print(json.load(sys.stdin).get('value', 0))")

          if [ -z "$COUNT" ] || [ "$COUNT" = "0" ]; then
            echo "::warning::Contagem pode estar zero ou falhou. Verifique a chave."
            COUNT=0
          fi
          
          echo "Contagem final: $COUNT"
          
          # Cria o arquivo visits.json que seu JS irá ler
          echo "{\"count\": $COUNT}" > visits.json
        
      - name: Commit and Push new visits.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_files: visits.json 
          commit_message: "chore(ci): Atualiza contador de visualizações (Automático - Hits.sh)"
          commit_author: GitHub Actions <actions@github.com>
